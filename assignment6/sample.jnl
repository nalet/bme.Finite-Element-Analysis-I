# Save by fe1 on 2019_05_16-15.48.23; build 2016 2015_09_24-22.31.09 126547
from abaqus import *
upgradeMdb('/home/fe1/Desktop/sample-6.13-5.cae', 
    '/home/fe1/Desktop/sample.cae')
# Save by fe1 on 2019_05_16-15.48.23; build 2016 2015_09_24-22.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Sample-45'].submit(consistencyChecking=OFF)
mdb.jobs['Sample-45']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'localhost.localdomain', 'handle': 0, 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE COMPRESSIBILITY OF THE ANISOTROPIC HYPERELASTIC MATERIAL WILL BE IGNORED IF USED IN COMBINATION WITH ELEMENTS WITH PLANE-STRESS FORMULATION. Abaqus ASSUMES FULLY INCOMPRESSIBLE BEHAVIOR IN THIS SITUATION.', 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR TWO-DIMENSIONAL MODELS, IF A NON-UNITY THICKNESS IS SPECIFIED FOR TWO-DIMENSIONAL SOLID ELEMENTS AND THESE ELEMENTS ARE INVOLVED IN AN INTERACTION SUCH AS CONTACT, THE SAME THICKNESS SHOULD BE SPECIFIED FOR THE OUT-OF-PLANE THICKNESS OF THE CORRESPONDING SURFACE UNDER *SURFACE INTERACTION.', 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'WHENEVER A TRANSLATION (ROTATION) DOF AT A NODE IS CONSTRAINED BY A KINEMATIC COUPLING DEFINITION THE TRANSLATION (ROTATION) DOFS FOR THAT NODE CANNOT BE INCLUDED IN ANY OTHER CONSTRAINT INCLUDING MPCS, RIGID BODIES, ETC.', 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'MPCS (EXTERNAL or INTERNAL, including those generated from rigid body definitions), KINEMATIC COUPLINGS, AND/OR EQUATIONS WILL ACTIVATE ADDITIONAL DEGREES OF FREEDOM', 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': '/home/fe1/naletmeinen/Sample-45.odb', 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'localhost.localdomain', 'handle': 0, 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Sample-45', 'memory': 25.0})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.01, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 1, 'stepTime': 0.01, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.02, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 2, 'stepTime': 0.02, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.035, 'attempts': 1, 
    'timeIncrement': 0.015, 'increment': 3, 'stepTime': 0.035, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.0575, 'attempts': 1, 
    'timeIncrement': 0.0225, 'increment': 4, 'stepTime': 0.0575, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.09125, 'attempts': 1, 
    'timeIncrement': 0.03375, 'increment': 5, 'stepTime': 0.09125, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.141875, 'attempts': 1, 
    'timeIncrement': 0.050625, 'increment': 6, 'stepTime': 0.141875, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.2178125, 'attempts': 1, 
    'timeIncrement': 0.0759375, 'increment': 7, 'stepTime': 0.2178125, 
    'step': 1, 'jobName': 'Sample-45', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.3178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 8, 'stepTime': 0.3178125, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.4178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 9, 'stepTime': 0.4178125, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.5178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 10, 'stepTime': 0.5178125, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.6178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 11, 'stepTime': 0.6178125, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.7178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 12, 'stepTime': 0.7178125, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.8178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 13, 'stepTime': 0.8178125, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.9178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 14, 'stepTime': 0.9178125, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 0.0821875000000001, 'increment': 15, 'stepTime': 1.0, 
    'step': 1, 'jobName': 'Sample-45', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-45']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(JOB_COMPLETED, {
    'time': 'Thu May 16 15:48:46 2019', 'jobName': 'Sample-45'})
mdb.models['Model-1'].materials['Material-1'].hyperelastic.setValues(table=((
    0.055, 0.01, 65.0, 85.0, 0.2), ))
mdb.jobs['Sample-45'].submit(consistencyChecking=OFF)
mdb.jobs['Sample-45']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'localhost.localdomain', 'handle': 0, 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE COMPRESSIBILITY OF THE ANISOTROPIC HYPERELASTIC MATERIAL WILL BE IGNORED IF USED IN COMBINATION WITH ELEMENTS WITH PLANE-STRESS FORMULATION. Abaqus ASSUMES FULLY INCOMPRESSIBLE BEHAVIOR IN THIS SITUATION.', 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR TWO-DIMENSIONAL MODELS, IF A NON-UNITY THICKNESS IS SPECIFIED FOR TWO-DIMENSIONAL SOLID ELEMENTS AND THESE ELEMENTS ARE INVOLVED IN AN INTERACTION SUCH AS CONTACT, THE SAME THICKNESS SHOULD BE SPECIFIED FOR THE OUT-OF-PLANE THICKNESS OF THE CORRESPONDING SURFACE UNDER *SURFACE INTERACTION.', 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'WHENEVER A TRANSLATION (ROTATION) DOF AT A NODE IS CONSTRAINED BY A KINEMATIC COUPLING DEFINITION THE TRANSLATION (ROTATION) DOFS FOR THAT NODE CANNOT BE INCLUDED IN ANY OTHER CONSTRAINT INCLUDING MPCS, RIGID BODIES, ETC.', 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'MPCS (EXTERNAL or INTERNAL, including those generated from rigid body definitions), KINEMATIC COUPLINGS, AND/OR EQUATIONS WILL ACTIVATE ADDITIONAL DEGREES OF FREEDOM', 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': '/home/fe1/naletmeinen/Sample-45.odb', 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'localhost.localdomain', 'handle': 0, 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Sample-45', 'memory': 25.0})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.01, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 1, 'stepTime': 0.01, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 9, 
    'phase': STANDARD_PHASE, 'equilibrium': 9})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.02, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 2, 'stepTime': 0.02, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.03, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 3, 'stepTime': 0.03, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.045, 'attempts': 1, 
    'timeIncrement': 0.015, 'increment': 4, 'stepTime': 0.045, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.0675, 'attempts': 1, 
    'timeIncrement': 0.0225, 'increment': 5, 'stepTime': 0.0675, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.10125, 'attempts': 1, 
    'timeIncrement': 0.03375, 'increment': 6, 'stepTime': 0.10125, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.151875, 'attempts': 1, 
    'timeIncrement': 0.050625, 'increment': 7, 'stepTime': 0.151875, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.2278125, 'attempts': 1, 
    'timeIncrement': 0.0759375, 'increment': 8, 'stepTime': 0.2278125, 
    'step': 1, 'jobName': 'Sample-45', 'severe': 0, 'iterations': 6, 
    'phase': STANDARD_PHASE, 'equilibrium': 6})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.30375, 'attempts': 1, 
    'timeIncrement': 0.0759375, 'increment': 9, 'stepTime': 0.30375, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 5, 
    'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.3796875, 'attempts': 1, 
    'timeIncrement': 0.0759375, 'increment': 10, 'stepTime': 0.3796875, 
    'step': 1, 'jobName': 'Sample-45', 'severe': 0, 'iterations': 5, 
    'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.455625, 'attempts': 1, 
    'timeIncrement': 0.0759375, 'increment': 11, 'stepTime': 0.455625, 
    'step': 1, 'jobName': 'Sample-45', 'severe': 0, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.5315625, 'attempts': 1, 
    'timeIncrement': 0.0759375, 'increment': 12, 'stepTime': 0.5315625, 
    'step': 1, 'jobName': 'Sample-45', 'severe': 0, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.6315625, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 13, 'stepTime': 0.6315625, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.7315625, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 14, 'stepTime': 0.7315625, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.8315625, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 15, 'stepTime': 0.8315625, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.9315625, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 16, 'stepTime': 0.9315625, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 0.0684375, 'increment': 17, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-45']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(JOB_COMPLETED, {
    'time': 'Thu May 16 16:00:06 2019', 'jobName': 'Sample-45'})
mdb.models['Model-1'].materials['Material-1'].hyperelastic.setValues(table=((
    550.0, 0.01, 65.0, 85.0, 0.2), ))
mdb.jobs['Sample-45'].submit(consistencyChecking=OFF)
mdb.jobs['Sample-45']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'localhost.localdomain', 'handle': 0, 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE COMPRESSIBILITY OF THE ANISOTROPIC HYPERELASTIC MATERIAL WILL BE IGNORED IF USED IN COMBINATION WITH ELEMENTS WITH PLANE-STRESS FORMULATION. Abaqus ASSUMES FULLY INCOMPRESSIBLE BEHAVIOR IN THIS SITUATION.', 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR TWO-DIMENSIONAL MODELS, IF A NON-UNITY THICKNESS IS SPECIFIED FOR TWO-DIMENSIONAL SOLID ELEMENTS AND THESE ELEMENTS ARE INVOLVED IN AN INTERACTION SUCH AS CONTACT, THE SAME THICKNESS SHOULD BE SPECIFIED FOR THE OUT-OF-PLANE THICKNESS OF THE CORRESPONDING SURFACE UNDER *SURFACE INTERACTION.', 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'WHENEVER A TRANSLATION (ROTATION) DOF AT A NODE IS CONSTRAINED BY A KINEMATIC COUPLING DEFINITION THE TRANSLATION (ROTATION) DOFS FOR THAT NODE CANNOT BE INCLUDED IN ANY OTHER CONSTRAINT INCLUDING MPCS, RIGID BODIES, ETC.', 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'MPCS (EXTERNAL or INTERNAL, including those generated from rigid body definitions), KINEMATIC COUPLINGS, AND/OR EQUATIONS WILL ACTIVATE ADDITIONAL DEGREES OF FREEDOM', 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': '/home/fe1/naletmeinen/Sample-45.odb', 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'localhost.localdomain', 'handle': 0, 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Sample-45', 'memory': 25.0})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.01, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 1, 'stepTime': 0.01, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.02, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 2, 'stepTime': 0.02, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.035, 'attempts': 1, 
    'timeIncrement': 0.015, 'increment': 3, 'stepTime': 0.035, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.0575, 'attempts': 1, 
    'timeIncrement': 0.0225, 'increment': 4, 'stepTime': 0.0575, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.09125, 'attempts': 1, 
    'timeIncrement': 0.03375, 'increment': 5, 'stepTime': 0.09125, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.141875, 'attempts': 1, 
    'timeIncrement': 0.050625, 'increment': 6, 'stepTime': 0.141875, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.2178125, 'attempts': 1, 
    'timeIncrement': 0.0759375, 'increment': 7, 'stepTime': 0.2178125, 
    'step': 1, 'jobName': 'Sample-45', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.3178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 8, 'stepTime': 0.3178125, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.4178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 9, 'stepTime': 0.4178125, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.5178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 10, 'stepTime': 0.5178125, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.6178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 11, 'stepTime': 0.6178125, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.7178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 12, 'stepTime': 0.7178125, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.8178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 13, 'stepTime': 0.8178125, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.9178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 14, 'stepTime': 0.9178125, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 0.0821875000000001, 'increment': 15, 'stepTime': 1.0, 
    'step': 1, 'jobName': 'Sample-45', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-45']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(JOB_COMPLETED, {
    'time': 'Thu May 16 16:02:54 2019', 'jobName': 'Sample-45'})
mdb.models['Model-1'].materials['Material-1'].hyperelastic.setValues(
    localDirections=6, table=((0.055, 0.01, 65.0, 85.0, 0.2), ))
mdb.jobs['Sample-45'].submit(consistencyChecking=OFF)
mdb.jobs['Sample-45']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'localhost.localdomain', 'handle': 0, 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'INTEGER VALUE FOR PARAMETER LOCALDIR MUST BE BETWEEN 0 AND 3', 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR TWO-DIMENSIONAL MODELS, IF A NON-UNITY THICKNESS IS SPECIFIED FOR TWO-DIMENSIONAL SOLID ELEMENTS AND THESE ELEMENTS ARE INVOLVED IN AN INTERACTION SUCH AS CONTACT, THE SAME THICKNESS SHOULD BE SPECIFIED FOR THE OUT-OF-PLANE THICKNESS OF THE CORRESPONDING SURFACE UNDER *SURFACE INTERACTION.', 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'WHENEVER A TRANSLATION (ROTATION) DOF AT A NODE IS CONSTRAINED BY A KINEMATIC COUPLING DEFINITION THE TRANSLATION (ROTATION) DOFS FOR THAT NODE CANNOT BE INCLUDED IN ANY OTHER CONSTRAINT INCLUDING MPCS, RIGID BODIES, ETC.', 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'MPCS (EXTERNAL or INTERNAL, including those generated from rigid body definitions), KINEMATIC COUPLINGS, AND/OR EQUATIONS WILL ACTIVATE ADDITIONAL DEGREES OF FREEDOM', 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '180 elements are missing elastic property reference. The elements have been identified in element set ErrElemMissingElasticPropRef.', 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': '/home/fe1/naletmeinen/Sample-45.odb', 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'Sample-45'})
mdb.models['Model-1'].materials['Material-1'].hyperelastic.setValues(
    localDirections=2, table=((0.055, 0.01, 65.0, 85.0, 0.2), ))
mdb.jobs['Sample-45'].submit(consistencyChecking=OFF)
mdb.jobs['Sample-45']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'localhost.localdomain', 'handle': 0, 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE COMPRESSIBILITY OF THE ANISOTROPIC HYPERELASTIC MATERIAL WILL BE IGNORED IF USED IN COMBINATION WITH ELEMENTS WITH PLANE-STRESS FORMULATION. Abaqus ASSUMES FULLY INCOMPRESSIBLE BEHAVIOR IN THIS SITUATION.', 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR TWO-DIMENSIONAL MODELS, IF A NON-UNITY THICKNESS IS SPECIFIED FOR TWO-DIMENSIONAL SOLID ELEMENTS AND THESE ELEMENTS ARE INVOLVED IN AN INTERACTION SUCH AS CONTACT, THE SAME THICKNESS SHOULD BE SPECIFIED FOR THE OUT-OF-PLANE THICKNESS OF THE CORRESPONDING SURFACE UNDER *SURFACE INTERACTION.', 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'WHENEVER A TRANSLATION (ROTATION) DOF AT A NODE IS CONSTRAINED BY A KINEMATIC COUPLING DEFINITION THE TRANSLATION (ROTATION) DOFS FOR THAT NODE CANNOT BE INCLUDED IN ANY OTHER CONSTRAINT INCLUDING MPCS, RIGID BODIES, ETC.', 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'MPCS (EXTERNAL or INTERNAL, including those generated from rigid body definitions), KINEMATIC COUPLINGS, AND/OR EQUATIONS WILL ACTIVATE ADDITIONAL DEGREES OF FREEDOM', 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': '/home/fe1/naletmeinen/Sample-45.odb', 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'localhost.localdomain', 'handle': 0, 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Sample-45', 'memory': 25.0})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.01, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 1, 'stepTime': 0.01, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 5, 
    'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.02, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 2, 'stepTime': 0.02, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.03, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 3, 'stepTime': 0.03, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.045, 'attempts': 1, 
    'timeIncrement': 0.015, 'increment': 4, 'stepTime': 0.045, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.0675, 'attempts': 1, 
    'timeIncrement': 0.0225, 'increment': 5, 'stepTime': 0.0675, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.10125, 'attempts': 1, 
    'timeIncrement': 0.03375, 'increment': 6, 'stepTime': 0.10125, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.151875, 'attempts': 1, 
    'timeIncrement': 0.050625, 'increment': 7, 'stepTime': 0.151875, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.2278125, 'attempts': 1, 
    'timeIncrement': 0.0759375, 'increment': 8, 'stepTime': 0.2278125, 
    'step': 1, 'jobName': 'Sample-45', 'severe': 0, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.3278125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 9, 'stepTime': 0.3278125, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.4278125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 10, 'stepTime': 0.4278125, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.5278125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 11, 'stepTime': 0.5278125, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.6278125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 12, 'stepTime': 0.6278125, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.7278125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 13, 'stepTime': 0.7278125, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.8278125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 14, 'stepTime': 0.8278125, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.9278125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 15, 'stepTime': 0.9278125, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 0.0721875000000001, 'increment': 16, 'stepTime': 1.0, 
    'step': 1, 'jobName': 'Sample-45', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Sample-45']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(JOB_COMPLETED, {
    'time': 'Thu May 16 16:05:10 2019', 'jobName': 'Sample-45'})
mdb.models['Model-1'].parts['sample'].materialOrientations[0].setValues(
    additionalRotationField='', additionalRotationType=ROTATION_ANGLE, angle=
    -15.0)
mdb.Job(name='Sample-30', objectToCopy=mdb.jobs['Sample-45'])
mdb.jobs['Sample-30'].submit(consistencyChecking=OFF)
mdb.jobs['Sample-30']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'localhost.localdomain', 'handle': 0, 
    'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE COMPRESSIBILITY OF THE ANISOTROPIC HYPERELASTIC MATERIAL WILL BE IGNORED IF USED IN COMBINATION WITH ELEMENTS WITH PLANE-STRESS FORMULATION. Abaqus ASSUMES FULLY INCOMPRESSIBLE BEHAVIOR IN THIS SITUATION.', 
    'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR TWO-DIMENSIONAL MODELS, IF A NON-UNITY THICKNESS IS SPECIFIED FOR TWO-DIMENSIONAL SOLID ELEMENTS AND THESE ELEMENTS ARE INVOLVED IN AN INTERACTION SUCH AS CONTACT, THE SAME THICKNESS SHOULD BE SPECIFIED FOR THE OUT-OF-PLANE THICKNESS OF THE CORRESPONDING SURFACE UNDER *SURFACE INTERACTION.', 
    'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'WHENEVER A TRANSLATION (ROTATION) DOF AT A NODE IS CONSTRAINED BY A KINEMATIC COUPLING DEFINITION THE TRANSLATION (ROTATION) DOFS FOR THAT NODE CANNOT BE INCLUDED IN ANY OTHER CONSTRAINT INCLUDING MPCS, RIGID BODIES, ETC.', 
    'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'MPCS (EXTERNAL or INTERNAL, including those generated from rigid body definitions), KINEMATIC COUPLINGS, AND/OR EQUATIONS WILL ACTIVATE ADDITIONAL DEGREES OF FREEDOM', 
    'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': '/home/fe1/naletmeinen/Sample-30.odb', 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'localhost.localdomain', 'handle': 0, 
    'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Sample-30', 'memory': 25.0})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.01, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 1, 'stepTime': 0.01, 'step': 1, 
    'jobName': 'Sample-30', 'severe': 0, 'iterations': 7, 
    'phase': STANDARD_PHASE, 'equilibrium': 7})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.02, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 2, 'stepTime': 0.02, 'step': 1, 
    'jobName': 'Sample-30', 'severe': 0, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.03, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 3, 'stepTime': 0.03, 'step': 1, 
    'jobName': 'Sample-30', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.045, 'attempts': 1, 
    'timeIncrement': 0.015, 'increment': 4, 'stepTime': 0.045, 'step': 1, 
    'jobName': 'Sample-30', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.0675, 'attempts': 1, 
    'timeIncrement': 0.0225, 'increment': 5, 'stepTime': 0.0675, 'step': 1, 
    'jobName': 'Sample-30', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.10125, 'attempts': 1, 
    'timeIncrement': 0.03375, 'increment': 6, 'stepTime': 0.10125, 'step': 1, 
    'jobName': 'Sample-30', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.151875, 'attempts': 1, 
    'timeIncrement': 0.050625, 'increment': 7, 'stepTime': 0.151875, 'step': 1, 
    'jobName': 'Sample-30', 'severe': 0, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.2278125, 'attempts': 1, 
    'timeIncrement': 0.0759375, 'increment': 8, 'stepTime': 0.2278125, 
    'step': 1, 'jobName': 'Sample-30', 'severe': 0, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.3278125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 9, 'stepTime': 0.3278125, 'step': 1, 
    'jobName': 'Sample-30', 'severe': 0, 'iterations': 5, 
    'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.4278125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 10, 'stepTime': 0.4278125, 'step': 1, 
    'jobName': 'Sample-30', 'severe': 0, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.5278125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 11, 'stepTime': 0.5278125, 'step': 1, 
    'jobName': 'Sample-30', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.6278125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 12, 'stepTime': 0.6278125, 'step': 1, 
    'jobName': 'Sample-30', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.7278125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 13, 'stepTime': 0.7278125, 'step': 1, 
    'jobName': 'Sample-30', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.8278125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 14, 'stepTime': 0.8278125, 'step': 1, 
    'jobName': 'Sample-30', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.9278125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 15, 'stepTime': 0.9278125, 'step': 1, 
    'jobName': 'Sample-30', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 0.0721875000000001, 'increment': 16, 'stepTime': 1.0, 
    'step': 1, 'jobName': 'Sample-30', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-30']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(JOB_COMPLETED, {
    'time': 'Thu May 16 16:12:49 2019', 'jobName': 'Sample-30'})
mdb.models['Model-1'].parts['sample'].materialOrientations[0].setValues(angle=
    15.0)
mdb.jobs['Sample-30'].submit(consistencyChecking=OFF)
mdb.jobs['Sample-30']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'localhost.localdomain', 'handle': 0, 
    'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE COMPRESSIBILITY OF THE ANISOTROPIC HYPERELASTIC MATERIAL WILL BE IGNORED IF USED IN COMBINATION WITH ELEMENTS WITH PLANE-STRESS FORMULATION. Abaqus ASSUMES FULLY INCOMPRESSIBLE BEHAVIOR IN THIS SITUATION.', 
    'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR TWO-DIMENSIONAL MODELS, IF A NON-UNITY THICKNESS IS SPECIFIED FOR TWO-DIMENSIONAL SOLID ELEMENTS AND THESE ELEMENTS ARE INVOLVED IN AN INTERACTION SUCH AS CONTACT, THE SAME THICKNESS SHOULD BE SPECIFIED FOR THE OUT-OF-PLANE THICKNESS OF THE CORRESPONDING SURFACE UNDER *SURFACE INTERACTION.', 
    'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'WHENEVER A TRANSLATION (ROTATION) DOF AT A NODE IS CONSTRAINED BY A KINEMATIC COUPLING DEFINITION THE TRANSLATION (ROTATION) DOFS FOR THAT NODE CANNOT BE INCLUDED IN ANY OTHER CONSTRAINT INCLUDING MPCS, RIGID BODIES, ETC.', 
    'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'MPCS (EXTERNAL or INTERNAL, including those generated from rigid body definitions), KINEMATIC COUPLINGS, AND/OR EQUATIONS WILL ACTIVATE ADDITIONAL DEGREES OF FREEDOM', 
    'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': '/home/fe1/naletmeinen/Sample-30.odb', 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'localhost.localdomain', 'handle': 0, 
    'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Sample-30', 'memory': 25.0})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.01, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 1, 'stepTime': 0.01, 'step': 1, 
    'jobName': 'Sample-30', 'severe': 0, 'iterations': 7, 
    'phase': STANDARD_PHASE, 'equilibrium': 7})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.02, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 2, 'stepTime': 0.02, 'step': 1, 
    'jobName': 'Sample-30', 'severe': 0, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.03, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 3, 'stepTime': 0.03, 'step': 1, 
    'jobName': 'Sample-30', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.045, 'attempts': 1, 
    'timeIncrement': 0.015, 'increment': 4, 'stepTime': 0.045, 'step': 1, 
    'jobName': 'Sample-30', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.0675, 'attempts': 1, 
    'timeIncrement': 0.0225, 'increment': 5, 'stepTime': 0.0675, 'step': 1, 
    'jobName': 'Sample-30', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.10125, 'attempts': 1, 
    'timeIncrement': 0.03375, 'increment': 6, 'stepTime': 0.10125, 'step': 1, 
    'jobName': 'Sample-30', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.151875, 'attempts': 1, 
    'timeIncrement': 0.050625, 'increment': 7, 'stepTime': 0.151875, 'step': 1, 
    'jobName': 'Sample-30', 'severe': 0, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.2278125, 'attempts': 1, 
    'timeIncrement': 0.0759375, 'increment': 8, 'stepTime': 0.2278125, 
    'step': 1, 'jobName': 'Sample-30', 'severe': 0, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.3278125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 9, 'stepTime': 0.3278125, 'step': 1, 
    'jobName': 'Sample-30', 'severe': 0, 'iterations': 5, 
    'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.4278125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 10, 'stepTime': 0.4278125, 'step': 1, 
    'jobName': 'Sample-30', 'severe': 0, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.5278125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 11, 'stepTime': 0.5278125, 'step': 1, 
    'jobName': 'Sample-30', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.6278125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 12, 'stepTime': 0.6278125, 'step': 1, 
    'jobName': 'Sample-30', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.7278125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 13, 'stepTime': 0.7278125, 'step': 1, 
    'jobName': 'Sample-30', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.8278125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 14, 'stepTime': 0.8278125, 'step': 1, 
    'jobName': 'Sample-30', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.9278125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 15, 'stepTime': 0.9278125, 'step': 1, 
    'jobName': 'Sample-30', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 0.0721875000000001, 'increment': 16, 'stepTime': 1.0, 
    'step': 1, 'jobName': 'Sample-30', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-30']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(JOB_COMPLETED, {
    'time': 'Thu May 16 16:14:44 2019', 'jobName': 'Sample-30'})
# Save by fe1 on 2019_05_16-17.02.14; build 2016 2015_09_24-22.31.09 126547
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].materials['Material-1'].hyperelastic.setValues(table=((
    0.031334, 0.01, 20.792526, 64.772585, 0.2), ))
mdb.models['Model-1'].parts['sample'].materialOrientations[0].setValues(
    additionalRotationField='', additionalRotationType=ROTATION_NONE, angle=
    0.0)
mdb.jobs['Sample-45'].submit(consistencyChecking=OFF)
mdb.jobs['Sample-45']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'localhost.localdomain', 'handle': 0, 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE COMPRESSIBILITY OF THE ANISOTROPIC HYPERELASTIC MATERIAL WILL BE IGNORED IF USED IN COMBINATION WITH ELEMENTS WITH PLANE-STRESS FORMULATION. Abaqus ASSUMES FULLY INCOMPRESSIBLE BEHAVIOR IN THIS SITUATION.', 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR TWO-DIMENSIONAL MODELS, IF A NON-UNITY THICKNESS IS SPECIFIED FOR TWO-DIMENSIONAL SOLID ELEMENTS AND THESE ELEMENTS ARE INVOLVED IN AN INTERACTION SUCH AS CONTACT, THE SAME THICKNESS SHOULD BE SPECIFIED FOR THE OUT-OF-PLANE THICKNESS OF THE CORRESPONDING SURFACE UNDER *SURFACE INTERACTION.', 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'WHENEVER A TRANSLATION (ROTATION) DOF AT A NODE IS CONSTRAINED BY A KINEMATIC COUPLING DEFINITION THE TRANSLATION (ROTATION) DOFS FOR THAT NODE CANNOT BE INCLUDED IN ANY OTHER CONSTRAINT INCLUDING MPCS, RIGID BODIES, ETC.', 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'MPCS (EXTERNAL or INTERNAL, including those generated from rigid body definitions), KINEMATIC COUPLINGS, AND/OR EQUATIONS WILL ACTIVATE ADDITIONAL DEGREES OF FREEDOM', 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': '/home/fe1/naletmeinen/Sample-45.odb', 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'localhost.localdomain', 'handle': 0, 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Sample-45', 'memory': 25.0})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.01, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 1, 'stepTime': 0.01, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.02, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 2, 'stepTime': 0.02, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.035, 'attempts': 1, 
    'timeIncrement': 0.015, 'increment': 3, 'stepTime': 0.035, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.0575, 'attempts': 1, 
    'timeIncrement': 0.0225, 'increment': 4, 'stepTime': 0.0575, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.09125, 'attempts': 1, 
    'timeIncrement': 0.03375, 'increment': 5, 'stepTime': 0.09125, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.141875, 'attempts': 1, 
    'timeIncrement': 0.050625, 'increment': 6, 'stepTime': 0.141875, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.2178125, 'attempts': 1, 
    'timeIncrement': 0.0759375, 'increment': 7, 'stepTime': 0.2178125, 
    'step': 1, 'jobName': 'Sample-45', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.3178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 8, 'stepTime': 0.3178125, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.4178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 9, 'stepTime': 0.4178125, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.5178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 10, 'stepTime': 0.5178125, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.6178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 11, 'stepTime': 0.6178125, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.7178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 12, 'stepTime': 0.7178125, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.8178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 13, 'stepTime': 0.8178125, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.9178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 14, 'stepTime': 0.9178125, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 0.0821875000000001, 'increment': 15, 'stepTime': 1.0, 
    'step': 1, 'jobName': 'Sample-45', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Sample-45']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(JOB_COMPLETED, {
    'time': 'Fri May 17 08:58:19 2019', 'jobName': 'Sample-45'})
mdb.models['Model-1'].parts['sample'].Set(name='StressPoint', nodes=
    mdb.models['Model-1'].parts['sample'].nodes.getSequenceFromMask(mask=(
    '[#40 ]', ), ))
mdb.jobs['Sample-45'].submit(consistencyChecking=OFF)
mdb.jobs['Sample-45']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'localhost.localdomain', 'handle': 0, 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE COMPRESSIBILITY OF THE ANISOTROPIC HYPERELASTIC MATERIAL WILL BE IGNORED IF USED IN COMBINATION WITH ELEMENTS WITH PLANE-STRESS FORMULATION. Abaqus ASSUMES FULLY INCOMPRESSIBLE BEHAVIOR IN THIS SITUATION.', 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR TWO-DIMENSIONAL MODELS, IF A NON-UNITY THICKNESS IS SPECIFIED FOR TWO-DIMENSIONAL SOLID ELEMENTS AND THESE ELEMENTS ARE INVOLVED IN AN INTERACTION SUCH AS CONTACT, THE SAME THICKNESS SHOULD BE SPECIFIED FOR THE OUT-OF-PLANE THICKNESS OF THE CORRESPONDING SURFACE UNDER *SURFACE INTERACTION.', 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'WHENEVER A TRANSLATION (ROTATION) DOF AT A NODE IS CONSTRAINED BY A KINEMATIC COUPLING DEFINITION THE TRANSLATION (ROTATION) DOFS FOR THAT NODE CANNOT BE INCLUDED IN ANY OTHER CONSTRAINT INCLUDING MPCS, RIGID BODIES, ETC.', 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'MPCS (EXTERNAL or INTERNAL, including those generated from rigid body definitions), KINEMATIC COUPLINGS, AND/OR EQUATIONS WILL ACTIVATE ADDITIONAL DEGREES OF FREEDOM', 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': '/home/fe1/naletmeinen/Sample-45.odb', 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'localhost.localdomain', 'handle': 0, 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Sample-45', 'memory': 25.0})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.01, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 1, 'stepTime': 0.01, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 4, 
    'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.02, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 2, 'stepTime': 0.02, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.035, 'attempts': 1, 
    'timeIncrement': 0.015, 'increment': 3, 'stepTime': 0.035, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.0575, 'attempts': 1, 
    'timeIncrement': 0.0225, 'increment': 4, 'stepTime': 0.0575, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.09125, 'attempts': 1, 
    'timeIncrement': 0.03375, 'increment': 5, 'stepTime': 0.09125, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.141875, 'attempts': 1, 
    'timeIncrement': 0.050625, 'increment': 6, 'stepTime': 0.141875, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.2178125, 'attempts': 1, 
    'timeIncrement': 0.0759375, 'increment': 7, 'stepTime': 0.2178125, 
    'step': 1, 'jobName': 'Sample-45', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.3178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 8, 'stepTime': 0.3178125, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.4178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 9, 'stepTime': 0.4178125, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.5178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 10, 'stepTime': 0.5178125, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.6178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 11, 'stepTime': 0.6178125, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.7178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 12, 'stepTime': 0.7178125, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.8178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 13, 'stepTime': 0.8178125, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 0.9178125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 14, 'stepTime': 0.9178125, 'step': 1, 
    'jobName': 'Sample-45', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-45']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 0.0821875000000001, 'increment': 15, 'stepTime': 1.0, 
    'step': 1, 'jobName': 'Sample-45', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Sample-45']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Sample-45'})
mdb.jobs['Sample-45']._Message(JOB_COMPLETED, {
    'time': 'Fri May 17 08:59:30 2019', 'jobName': 'Sample-45'})
mdb.models['Model-1'].parts['sample'].materialOrientations[0].setValues(
    additionalRotationField='', additionalRotationType=ROTATION_ANGLE, angle=
    15.0)
mdb.jobs['Sample-30'].submit(consistencyChecking=OFF)
mdb.jobs['Sample-30']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'localhost.localdomain', 'handle': 0, 
    'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE COMPRESSIBILITY OF THE ANISOTROPIC HYPERELASTIC MATERIAL WILL BE IGNORED IF USED IN COMBINATION WITH ELEMENTS WITH PLANE-STRESS FORMULATION. Abaqus ASSUMES FULLY INCOMPRESSIBLE BEHAVIOR IN THIS SITUATION.', 
    'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR TWO-DIMENSIONAL MODELS, IF A NON-UNITY THICKNESS IS SPECIFIED FOR TWO-DIMENSIONAL SOLID ELEMENTS AND THESE ELEMENTS ARE INVOLVED IN AN INTERACTION SUCH AS CONTACT, THE SAME THICKNESS SHOULD BE SPECIFIED FOR THE OUT-OF-PLANE THICKNESS OF THE CORRESPONDING SURFACE UNDER *SURFACE INTERACTION.', 
    'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'WHENEVER A TRANSLATION (ROTATION) DOF AT A NODE IS CONSTRAINED BY A KINEMATIC COUPLING DEFINITION THE TRANSLATION (ROTATION) DOFS FOR THAT NODE CANNOT BE INCLUDED IN ANY OTHER CONSTRAINT INCLUDING MPCS, RIGID BODIES, ETC.', 
    'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'MPCS (EXTERNAL or INTERNAL, including those generated from rigid body definitions), KINEMATIC COUPLINGS, AND/OR EQUATIONS WILL ACTIVATE ADDITIONAL DEGREES OF FREEDOM', 
    'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': '/home/fe1/naletmeinen/Sample-30.odb', 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'localhost.localdomain', 'handle': 0, 
    'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Sample-30', 'memory': 25.0})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.01, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 1, 'stepTime': 0.01, 'step': 1, 
    'jobName': 'Sample-30', 'severe': 0, 'iterations': 6, 
    'phase': STANDARD_PHASE, 'equilibrium': 6})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.02, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 2, 'stepTime': 0.02, 'step': 1, 
    'jobName': 'Sample-30', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.03, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 3, 'stepTime': 0.03, 'step': 1, 
    'jobName': 'Sample-30', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.045, 'attempts': 1, 
    'timeIncrement': 0.015, 'increment': 4, 'stepTime': 0.045, 'step': 1, 
    'jobName': 'Sample-30', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.0675, 'attempts': 1, 
    'timeIncrement': 0.0225, 'increment': 5, 'stepTime': 0.0675, 'step': 1, 
    'jobName': 'Sample-30', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.10125, 'attempts': 1, 
    'timeIncrement': 0.03375, 'increment': 6, 'stepTime': 0.10125, 'step': 1, 
    'jobName': 'Sample-30', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.151875, 'attempts': 1, 
    'timeIncrement': 0.050625, 'increment': 7, 'stepTime': 0.151875, 'step': 1, 
    'jobName': 'Sample-30', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.2278125, 'attempts': 1, 
    'timeIncrement': 0.0759375, 'increment': 8, 'stepTime': 0.2278125, 
    'step': 1, 'jobName': 'Sample-30', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.3278125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 9, 'stepTime': 0.3278125, 'step': 1, 
    'jobName': 'Sample-30', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.4278125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 10, 'stepTime': 0.4278125, 'step': 1, 
    'jobName': 'Sample-30', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.5278125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 11, 'stepTime': 0.5278125, 'step': 1, 
    'jobName': 'Sample-30', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.6278125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 12, 'stepTime': 0.6278125, 'step': 1, 
    'jobName': 'Sample-30', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.7278125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 13, 'stepTime': 0.7278125, 'step': 1, 
    'jobName': 'Sample-30', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.8278125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 14, 'stepTime': 0.8278125, 'step': 1, 
    'jobName': 'Sample-30', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 0.9278125, 'attempts': 1, 
    'timeIncrement': 0.1, 'increment': 15, 'stepTime': 0.9278125, 'step': 1, 
    'jobName': 'Sample-30', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-30']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 0.0721875000000001, 'increment': 16, 'stepTime': 1.0, 
    'step': 1, 'jobName': 'Sample-30', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-30']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Sample-30'})
mdb.jobs['Sample-30']._Message(JOB_COMPLETED, {
    'time': 'Fri May 17 09:00:10 2019', 'jobName': 'Sample-30'})
mdb.models['Model-1'].parts['sample'].materialOrientations[0].setValues(
    additionalRotationField='', additionalRotationType=ROTATION_NONE, angle=
    0.0)
mdb.models['Model-1'].materials['Material-1'].hyperelastic.setValues(table=((
    0.055, 0.01, 65.0, 85.0, 0.2), ))
mdb.Job(name='Sample-45-Bad', objectToCopy=mdb.jobs['Sample-45'])
mdb.jobs['Sample-45-Bad'].submit(consistencyChecking=OFF)
mdb.jobs['Sample-45-Bad']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'localhost.localdomain', 'handle': 0, 
    'jobName': 'Sample-45-Bad'})
mdb.jobs['Sample-45-Bad']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE COMPRESSIBILITY OF THE ANISOTROPIC HYPERELASTIC MATERIAL WILL BE IGNORED IF USED IN COMBINATION WITH ELEMENTS WITH PLANE-STRESS FORMULATION. Abaqus ASSUMES FULLY INCOMPRESSIBLE BEHAVIOR IN THIS SITUATION.', 
    'jobName': 'Sample-45-Bad'})
mdb.jobs['Sample-45-Bad']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR TWO-DIMENSIONAL MODELS, IF A NON-UNITY THICKNESS IS SPECIFIED FOR TWO-DIMENSIONAL SOLID ELEMENTS AND THESE ELEMENTS ARE INVOLVED IN AN INTERACTION SUCH AS CONTACT, THE SAME THICKNESS SHOULD BE SPECIFIED FOR THE OUT-OF-PLANE THICKNESS OF THE CORRESPONDING SURFACE UNDER *SURFACE INTERACTION.', 
    'jobName': 'Sample-45-Bad'})
mdb.jobs['Sample-45-Bad']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'WHENEVER A TRANSLATION (ROTATION) DOF AT A NODE IS CONSTRAINED BY A KINEMATIC COUPLING DEFINITION THE TRANSLATION (ROTATION) DOFS FOR THAT NODE CANNOT BE INCLUDED IN ANY OTHER CONSTRAINT INCLUDING MPCS, RIGID BODIES, ETC.', 
    'jobName': 'Sample-45-Bad'})
mdb.jobs['Sample-45-Bad']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'MPCS (EXTERNAL or INTERNAL, including those generated from rigid body definitions), KINEMATIC COUPLINGS, AND/OR EQUATIONS WILL ACTIVATE ADDITIONAL DEGREES OF FREEDOM', 
    'jobName': 'Sample-45-Bad'})
mdb.jobs['Sample-45-Bad']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': '/home/fe1/naletmeinen/Sample-45-Bad.odb', 
    'jobName': 'Sample-45-Bad'})
mdb.jobs['Sample-45-Bad']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Sample-45-Bad'})
mdb.jobs['Sample-45-Bad']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'localhost.localdomain', 'handle': 0, 
    'jobName': 'Sample-45-Bad'})
mdb.jobs['Sample-45-Bad']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Sample-45-Bad'})
mdb.jobs['Sample-45-Bad']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 0, 'jobName': 'Sample-45-Bad'})
mdb.jobs['Sample-45-Bad']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Sample-45-Bad', 'memory': 25.0})
mdb.jobs['Sample-45-Bad']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 1, 'jobName': 'Sample-45-Bad'})
mdb.jobs['Sample-45-Bad']._Message(STATUS, {'totalTime': 0.01, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 1, 'stepTime': 0.01, 'step': 1, 
    'jobName': 'Sample-45-Bad', 'severe': 0, 'iterations': 5, 
    'phase': STANDARD_PHASE, 'equilibrium': 5})
mdb.jobs['Sample-45-Bad']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 2, 'jobName': 'Sample-45-Bad'})
mdb.jobs['Sample-45-Bad']._Message(STATUS, {'totalTime': 0.02, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 2, 'stepTime': 0.02, 'step': 1, 
    'jobName': 'Sample-45-Bad', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-45-Bad']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 3, 'jobName': 'Sample-45-Bad'})
mdb.jobs['Sample-45-Bad']._Message(STATUS, {'totalTime': 0.03, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 3, 'stepTime': 0.03, 'step': 1, 
    'jobName': 'Sample-45-Bad', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-45-Bad']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 4, 'jobName': 'Sample-45-Bad'})
mdb.jobs['Sample-45-Bad']._Message(STATUS, {'totalTime': 0.045, 'attempts': 1, 
    'timeIncrement': 0.015, 'increment': 4, 'stepTime': 0.045, 'step': 1, 
    'jobName': 'Sample-45-Bad', 'severe': 0, 'iterations': 2, 
    'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-45-Bad']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 5, 'jobName': 'Sample-45-Bad'})
mdb.jobs['Sample-45-Bad']._Message(STATUS, {'totalTime': 0.0675, 'attempts': 1, 
    'timeIncrement': 0.0225, 'increment': 5, 'stepTime': 0.0675, 'step': 1, 
    'jobName': 'Sample-45-Bad', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-45-Bad']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 6, 'jobName': 'Sample-45-Bad'})
mdb.jobs['Sample-45-Bad']._Message(STATUS, {'totalTime': 0.10125, 
    'attempts': 1, 'timeIncrement': 0.03375, 'increment': 6, 
    'stepTime': 0.10125, 'step': 1, 'jobName': 'Sample-45-Bad', 'severe': 0, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-45-Bad']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 7, 'jobName': 'Sample-45-Bad'})
mdb.jobs['Sample-45-Bad']._Message(STATUS, {'totalTime': 0.151875, 
    'attempts': 1, 'timeIncrement': 0.050625, 'increment': 7, 
    'stepTime': 0.151875, 'step': 1, 'jobName': 'Sample-45-Bad', 'severe': 0, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-45-Bad']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 8, 'jobName': 'Sample-45-Bad'})
mdb.jobs['Sample-45-Bad']._Message(STATUS, {'totalTime': 0.2278125, 
    'attempts': 1, 'timeIncrement': 0.0759375, 'increment': 8, 
    'stepTime': 0.2278125, 'step': 1, 'jobName': 'Sample-45-Bad', 'severe': 0, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['Sample-45-Bad']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 9, 'jobName': 'Sample-45-Bad'})
mdb.jobs['Sample-45-Bad']._Message(STATUS, {'totalTime': 0.3278125, 
    'attempts': 1, 'timeIncrement': 0.1, 'increment': 9, 'stepTime': 0.3278125, 
    'step': 1, 'jobName': 'Sample-45-Bad', 'severe': 0, 'iterations': 3, 
    'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-45-Bad']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 10, 'jobName': 'Sample-45-Bad'})
mdb.jobs['Sample-45-Bad']._Message(STATUS, {'totalTime': 0.4278125, 
    'attempts': 1, 'timeIncrement': 0.1, 'increment': 10, 
    'stepTime': 0.4278125, 'step': 1, 'jobName': 'Sample-45-Bad', 'severe': 0, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-45-Bad']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 11, 'jobName': 'Sample-45-Bad'})
mdb.jobs['Sample-45-Bad']._Message(STATUS, {'totalTime': 0.5278125, 
    'attempts': 1, 'timeIncrement': 0.1, 'increment': 11, 
    'stepTime': 0.5278125, 'step': 1, 'jobName': 'Sample-45-Bad', 'severe': 0, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-45-Bad']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 12, 'jobName': 'Sample-45-Bad'})
mdb.jobs['Sample-45-Bad']._Message(STATUS, {'totalTime': 0.6278125, 
    'attempts': 1, 'timeIncrement': 0.1, 'increment': 12, 
    'stepTime': 0.6278125, 'step': 1, 'jobName': 'Sample-45-Bad', 'severe': 0, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['Sample-45-Bad']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 13, 'jobName': 'Sample-45-Bad'})
mdb.jobs['Sample-45-Bad']._Message(STATUS, {'totalTime': 0.7278125, 
    'attempts': 1, 'timeIncrement': 0.1, 'increment': 13, 
    'stepTime': 0.7278125, 'step': 1, 'jobName': 'Sample-45-Bad', 'severe': 0, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-45-Bad']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 14, 'jobName': 'Sample-45-Bad'})
mdb.jobs['Sample-45-Bad']._Message(STATUS, {'totalTime': 0.8278125, 
    'attempts': 1, 'timeIncrement': 0.1, 'increment': 14, 
    'stepTime': 0.8278125, 'step': 1, 'jobName': 'Sample-45-Bad', 'severe': 0, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-45-Bad']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 15, 'jobName': 'Sample-45-Bad'})
mdb.jobs['Sample-45-Bad']._Message(STATUS, {'totalTime': 0.9278125, 
    'attempts': 1, 'timeIncrement': 0.1, 'increment': 15, 
    'stepTime': 0.9278125, 'step': 1, 'jobName': 'Sample-45-Bad', 'severe': 0, 
    'iterations': 2, 'phase': STANDARD_PHASE, 'equilibrium': 2})
mdb.jobs['Sample-45-Bad']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 
    'step': 0, 'frame': 16, 'jobName': 'Sample-45-Bad'})
mdb.jobs['Sample-45-Bad']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 0.0721875000000001, 'increment': 16, 'stepTime': 1.0, 
    'step': 1, 'jobName': 'Sample-45-Bad', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Sample-45-Bad']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': 'Sample-45-Bad'})
mdb.jobs['Sample-45-Bad']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Sample-45-Bad'})
mdb.jobs['Sample-45-Bad']._Message(JOB_COMPLETED, {
    'time': 'Fri May 17 09:31:34 2019', 'jobName': 'Sample-45-Bad'})
# Save by fe1 on 2019_05_17-09.39.05; build 2016 2015_09_24-22.31.09 126547
